/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Base64;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;

/**
 *
 * @author seanb
 */
public class ParentMainMenu extends javax.swing.JFrame {

    private String username;
    private final String DB_URL = "jdbc:mysql://rds-mysql-tutorial.conn5z28bnte.eu-west-1.rds.amazonaws.com:3306/SchoolPortal";
    private Properties prop = new Properties();
    private InputStream input = null;
    private String encryptedData;
    private char[] decryptedData;
    private static SecretKeySpec schoolNumber;
    private static byte[] key;
    private char[] convertedChar;
    private String dbusername;
    private Connection conn = null;
    private Statement stmt = null;
    private ResultSet results;
    private ResultSet results2;
    private int parentId;
    private String studentName;
    private PAssessmentScreen assessments = new PAssessmentScreen();

    /**
     * Creates new form ParentMainMenu
     */
    public ParentMainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        signOutBT = new javax.swing.JButton();
        parentIcon = new javax.swing.JLabel();
        parentTxt = new javax.swing.JTextField();
        parentTF = new javax.swing.JTextField();
        reportBT = new javax.swing.JButton();
        assessmentsBT = new javax.swing.JButton();
        editProfileBT = new javax.swing.JButton();
        studentTxt = new javax.swing.JTextField();
        studentTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 1000));

        backgroundPanel.setBackground(new java.awt.Color(250, 228, 188));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        signOutBT.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        signOutBT.setText("Sign Out");
        signOutBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(signOutBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        parentIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        parentIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/ParentIcon.png"))); // NOI18N
        backgroundPanel.add(parentIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 200, 200));

        parentTxt.setEditable(false);
        parentTxt.setBackground(new java.awt.Color(250, 228, 188));
        parentTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        parentTxt.setText("Parent User:");
        parentTxt.setBorder(null);
        parentTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(parentTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, -1, -1));

        parentTF.setEditable(false);
        parentTF.setBackground(new java.awt.Color(250, 228, 188));
        parentTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        parentTF.setBorder(null);
        parentTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentTFActionPerformed(evt);
            }
        });
        backgroundPanel.add(parentTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, 190, -1));

        reportBT.setBackground(new java.awt.Color(65, 147, 211));
        reportBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        reportBT.setText("Weekly Reports");
        reportBT.setBorder(null);
        reportBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(reportBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 260, 90));

        assessmentsBT.setBackground(new java.awt.Color(65, 147, 211));
        assessmentsBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        assessmentsBT.setText("Assessments");
        assessmentsBT.setBorder(null);
        assessmentsBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assessmentsBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(assessmentsBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 570, 260, 90));

        editProfileBT.setBackground(new java.awt.Color(65, 147, 211));
        editProfileBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        editProfileBT.setText("Edit Profile");
        editProfileBT.setBorder(null);
        editProfileBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProfileBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(editProfileBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 720, 260, 90));

        studentTxt.setEditable(false);
        studentTxt.setBackground(new java.awt.Color(250, 228, 188));
        studentTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        studentTxt.setText("Student:");
        studentTxt.setBorder(null);
        studentTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(studentTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, -1, -1));

        studentTF.setEditable(false);
        studentTF.setBackground(new java.awt.Color(250, 228, 188));
        studentTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        studentTF.setBorder(null);
        studentTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentTFActionPerformed(evt);
            }
        });
        backgroundPanel.add(studentTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 190, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signOutBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutBTActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadScreen().setVisible(true);
            }
        });
    }//GEN-LAST:event_signOutBTActionPerformed

    private void parentTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parentTxtActionPerformed

    private void parentTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parentTFActionPerformed

    private void editProfileBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProfileBTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editProfileBTActionPerformed

    private void reportBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBTActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_reportBTActionPerformed

    private void assessmentsBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assessmentsBTActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        assessments.setVisible(true);
        assessments.account(this);
        assessments.StudentId(studentName, parentId);
    }//GEN-LAST:event_assessmentsBTActionPerformed

    private void studentTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentTxtActionPerformed

    private void studentTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assessmentsBT;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton editProfileBT;
    private javax.swing.JLabel parentIcon;
    private javax.swing.JTextField parentTF;
    private javax.swing.JTextField parentTxt;
    private javax.swing.JButton reportBT;
    private javax.swing.JButton signOutBT;
    private javax.swing.JTextField studentTF;
    private javax.swing.JTextField studentTxt;
    // End of variables declaration//GEN-END:variables
    
    void Username(String uname) {
        username = uname;
        
        databaseConnection();
        try {
            Class.forName("com.mysql.jdbc.Driver");

            conn = DriverManager.getConnection(DB_URL, dbusername, new String(decryptedData));
            
           
            String query = "SELECT Id FROM ParentAccounts WHERE Username = ? ";
            String query2 = "SELECT Name FROM Students WHERE ParentId = ? ";
            
            try{
            conn.setAutoCommit(false);
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, username);
            results = pstmt.executeQuery();
                 while(results.next()){
                   parentId =results.getInt("Id");
                 }
            
            PreparedStatement pstmt2 = conn.prepareStatement(query2);
            
            pstmt2.setInt(1, parentId);

            results2 = pstmt2.executeQuery();
            while (results2.next()) {
                //dbPassword= results2.getString("Password");
                studentName = results2.getString("Name");
            }
                 
                
                conn.commit();
            }catch(SQLException e){
                System.out.println(e);
                conn.rollback();
            }
            conn.close();

        } catch (ClassNotFoundException ex) { 
            
        } catch (SQLException ex) {
            
        }
        
        parentTF.setText(username);
        studentTF.setText(studentName);
    }

    private void databaseConnection() {
            try {

                //Gets details from properties file
                input = new FileInputStream("config.properties");
                prop.load(input);
                dbusername = prop.getProperty("pusername");
                encryptedData = prop.getProperty("ppassword");
                decryptedData = decrypt(encryptedData);

            } catch (FileNotFoundException ex) {
                //Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {

            }
    }

    private char[] decrypt(String encryptedData) {
        String schoolPostcode = "LdU6_UF}?Z3Pnwa3";
        schoolPostCodeGen(schoolPostcode);

        try {
            Cipher c = Cipher.getInstance("AES/ECB/PKCS5Padding");
            c.init(Cipher.DECRYPT_MODE, schoolNumber);
            c.doFinal(Base64.getDecoder().decode(encryptedData));
            byte[] convertedByte = c.doFinal(Base64.getDecoder().decode(encryptedData));
            convertedChar = new char[convertedByte.length];
            for (int i = 0; i < convertedByte.length; i++) {
                convertedChar[i] = (char) convertedByte[i];
            }
        } catch (NoSuchAlgorithmException ex) {

        } catch (NoSuchPaddingException ex) {

        } catch (InvalidKeyException ex) {

        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        return convertedChar;
    }

    private void schoolPostCodeGen(String postCode) {
        MessageDigest sha = null;
        try {
            key = postCode.getBytes("UTF-8");
            sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16);
            schoolNumber = new SecretKeySpec(key, "AES");
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }
}
