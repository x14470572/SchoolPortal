/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;

/**
 *
 * @author seanb, markent
 */
public class createStudentScreen extends javax.swing.JFrame {
    private adminMainMenu aMainMenu;
    private final String DB_URL = "jdbc:mysql://rds-mysql-tutorial.conn5z28bnte.eu-west-1.rds.amazonaws.com:3306/SchoolPortal";
    private Properties prop = new Properties();
    private InputStream input = null;
    private String encryptedData;
    private char[] decryptedData;
    private static SecretKeySpec schoolNumber;
    private static byte[] key;
    private char[] convertedChar;
    private String dbusername;
    private Connection conn = null;
    private Statement stmt = null;
    private ResultSet results;
    private ResultSet results2;
    private String subjectName;
    private int teacherId;
    private final String[] subjects = {"Maths", "English", "Irish", "Chemistry", "Business", "French"};
    private String studentName;
    private String foreName;
    private String surName;
    private String accName;
    private int sub1, sub2, sub3, sub4, sub5, sub6;
    private String acc1, acc2, acc3, acc4, acc5, acc6;
    private ArrayList<String> accArr = new ArrayList<String>();
    /**
     * Creates new form createStudentScreen
     */
    public createStudentScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        backBT = new javax.swing.JButton();
        createStudentIcon = new javax.swing.JLabel();
        createStudentTxt = new javax.swing.JTextField();
        forenameTxt = new javax.swing.JTextField();
        foreNameTF = new javax.swing.JTextField();
        sureNameTxt = new javax.swing.JTextField();
        surenameTF = new javax.swing.JTextField();
        teacherTxt = new javax.swing.JTextField();
        subjectTxt = new javax.swing.JTextField();
        mathsTxt = new javax.swing.JTextField();
        mathsCB = new javax.swing.JComboBox<>();
        englishTxt = new javax.swing.JTextField();
        englishCB = new javax.swing.JComboBox<>();
        irishTxt = new javax.swing.JTextField();
        irishCB = new javax.swing.JComboBox<>();
        chemistryTxt = new javax.swing.JTextField();
        chemistryCB = new javax.swing.JComboBox<>();
        businessTxt = new javax.swing.JTextField();
        businessCB = new javax.swing.JComboBox<>();
        frenchTxt = new javax.swing.JTextField();
        frenchCB = new javax.swing.JComboBox<>();
        addStudentBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 1000));

        backgroundPanel.setBackground(new java.awt.Color(250, 228, 188));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/backBT.png"))); // NOI18N
        backBT.setBorder(null);
        backBT.setOpaque(false);
        backBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(backBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 50, 50));

        createStudentIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createStudentIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/createAccount.png"))); // NOI18N
        backgroundPanel.add(createStudentIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 200, 200));

        createStudentTxt.setEditable(false);
        createStudentTxt.setBackground(new java.awt.Color(250, 228, 188));
        createStudentTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        createStudentTxt.setText("Create Student");
        createStudentTxt.setBorder(null);
        createStudentTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createStudentTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(createStudentTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 220, -1));

        forenameTxt.setEditable(false);
        forenameTxt.setBackground(new java.awt.Color(250, 228, 188));
        forenameTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        forenameTxt.setText("Student Forename:");
        forenameTxt.setBorder(null);
        backgroundPanel.add(forenameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, -1, -1));

        foreNameTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(foreNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, 250, 50));

        sureNameTxt.setEditable(false);
        sureNameTxt.setBackground(new java.awt.Color(250, 228, 188));
        sureNameTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        sureNameTxt.setText("Student Surname:");
        sureNameTxt.setBorder(null);
        backgroundPanel.add(sureNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 390, -1, -1));

        surenameTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(surenameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 430, 250, 50));

        teacherTxt.setEditable(false);
        teacherTxt.setBackground(new java.awt.Color(250, 228, 188));
        teacherTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        teacherTxt.setText("Subjects:");
        teacherTxt.setBorder(null);
        teacherTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(teacherTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, -1, -1));

        subjectTxt.setEditable(false);
        subjectTxt.setBackground(new java.awt.Color(250, 228, 188));
        subjectTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        subjectTxt.setText("Teachers:");
        subjectTxt.setBorder(null);
        subjectTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(subjectTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 510, -1, -1));

        mathsTxt.setEditable(false);
        mathsTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        mathsTxt.setText("Maths");
        mathsTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mathsTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(mathsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 550, 250, 50));

        mathsCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        mathsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mathsCBActionPerformed(evt);
            }
        });
        backgroundPanel.add(mathsCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 550, 250, 50));

        englishTxt.setEditable(false);
        englishTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        englishTxt.setText("English");
        englishTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(englishTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 600, 250, 50));

        englishCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(englishCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 600, 250, 50));

        irishTxt.setEditable(false);
        irishTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        irishTxt.setText("Irish");
        irishTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irishTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(irishTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 650, 250, 50));

        irishCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(irishCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 650, 250, 50));

        chemistryTxt.setEditable(false);
        chemistryTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        chemistryTxt.setText("Chemistry");
        chemistryTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemistryTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(chemistryTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 700, 250, 50));

        chemistryCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(chemistryCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 700, 250, 50));

        businessTxt.setEditable(false);
        businessTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        businessTxt.setText("Business");
        businessTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(businessTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 750, 250, 50));

        businessCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(businessCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 750, 250, 50));

        frenchTxt.setEditable(false);
        frenchTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        frenchTxt.setText("French");
        frenchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frenchTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(frenchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 800, 250, 50));

        frenchCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(frenchCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 800, 250, 50));

        addStudentBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        addStudentBT.setText("Add Student");
        addStudentBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(addStudentBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 900, 160, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        aMainMenu.setVisible(true);
    }//GEN-LAST:event_backBTActionPerformed

    private void addStudentBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentBTActionPerformed
        // TODO add your handling code here:

        CreateStudent();
        this.setVisible(false);
        aMainMenu.setVisible(true);
    }//GEN-LAST:event_addStudentBTActionPerformed

    private void subjectTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectTxtActionPerformed

    private void createStudentTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createStudentTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createStudentTxtActionPerformed

    private void teacherTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherTxtActionPerformed

    private void frenchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frenchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frenchTxtActionPerformed

    private void mathsTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mathsTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mathsTxtActionPerformed

    private void englishTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_englishTxtActionPerformed

    private void irishTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irishTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_irishTxtActionPerformed

    private void chemistryTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemistryTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemistryTxtActionPerformed

    private void businessTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_businessTxtActionPerformed

    private void mathsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mathsCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mathsCBActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentBT;
    private javax.swing.JButton backBT;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JComboBox<String> businessCB;
    private javax.swing.JTextField businessTxt;
    private javax.swing.JComboBox<String> chemistryCB;
    private javax.swing.JTextField chemistryTxt;
    private javax.swing.JLabel createStudentIcon;
    private javax.swing.JTextField createStudentTxt;
    private javax.swing.JComboBox<String> englishCB;
    private javax.swing.JTextField englishTxt;
    private javax.swing.JTextField foreNameTF;
    private javax.swing.JTextField forenameTxt;
    private javax.swing.JComboBox<String> frenchCB;
    private javax.swing.JTextField frenchTxt;
    private javax.swing.JComboBox<String> irishCB;
    private javax.swing.JTextField irishTxt;
    private javax.swing.JComboBox<String> mathsCB;
    private javax.swing.JTextField mathsTxt;
    private javax.swing.JTextField subjectTxt;
    private javax.swing.JTextField sureNameTxt;
    private javax.swing.JTextField surenameTF;
    private javax.swing.JTextField teacherTxt;
    // End of variables declaration//GEN-END:variables

    void account(Object account) {

        aMainMenu = (schoolproject.adminMainMenu) account;
    }
    
    void getTeachers() {

        
        databaseConnection();
        
        for(String sub : subjects){
            try{
                Class.forName("com.mysql.jdbc.Driver");
                
                subjectName = sub;
                conn = DriverManager.getConnection(DB_URL, dbusername, new String(decryptedData));


                String query = "SELECT TeacherId FROM Subjects WHERE SubName = ?";
                String query2 = "SELECT AccName FROM Accounts WHERE Id = ?";

                try{
                    conn.setAutoCommit(false);

                    PreparedStatement pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, subjectName);
                    results = pstmt.executeQuery();
                        while(results.next()){
                            teacherId = results.getInt("TeacherId");

                            PreparedStatement pstmt2 = conn.prepareStatement(query2);
                            pstmt2.setInt(1, teacherId);
                            results2 = pstmt2.executeQuery();
                            if(subjectName.equals("Maths")){
                                while(results2.next()){
                                    mathsCB.addItem(results2.getString("AccName"));
                                }
                            }else if(subjectName.equals("English")){
                                while(results2.next()){
                                    englishCB.addItem(results2.getString("AccName"));
                                }
                            }else if(subjectName.equals("Irish")){
                                while(results2.next()){
                                    irishCB.addItem(results2.getString("AccName"));
                                }
                            }else if(subjectName.equals("Chemistry")){
                                while(results2.next()){
                                    chemistryCB.addItem(results2.getString("AccName"));
                                }
                            }else if(subjectName.equals("Business")){
                                while(results2.next()){
                                    businessCB.addItem(results2.getString("AccName"));
                                }
                            }else{
                                while(results2.next()){
                                    frenchCB.addItem(results2.getString("AccName"));
                                }
                            }
                        }   

                    conn.commit();


                }catch(SQLException e) {
                    System.out.println(e);
                    conn.rollback();
                }
                conn.close();
            } catch (ClassNotFoundException ex){
                System.out.println(ex);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }
    
    void CreateStudent(){
        databaseConnection();
        
            acc1 = (String) mathsCB.getSelectedItem();
            acc2 = (String) englishCB.getSelectedItem();
            acc3 = (String) irishCB.getSelectedItem();
            acc4 = (String) chemistryCB.getSelectedItem();
            acc5 = (String) businessCB.getSelectedItem();
            acc6 = (String) frenchCB.getSelectedItem();
            
            accArr.add(acc1);
            accArr.add(acc2);
            accArr.add(acc3);
            accArr.add(acc4);
            accArr.add(acc5);
            accArr.add(acc6);
        
            try{
                Class.forName("com.mysql.jdbc.Driver");
                conn = DriverManager.getConnection(DB_URL, dbusername, new String(decryptedData));
                foreName = foreNameTF.getText();
                surName = surenameTF.getText();
                studentName = foreName + " " + surName;
                

                String query = "SELECT Id FROM Accounts WHERE AccName = ?";
                String query2 = "SELECT Id FROM Subjects WHERE TeacherId = ?";
                String query3 = "INSERT INTO Students(StudName, Maths, English, Irish, Chem, Business, French) VALUES(?,?,?,?,?,?,?)";


                    try{
                        
                        conn.setAutoCommit(false);
                        for(String acc : accArr) {
                            accName = acc;
                        PreparedStatement pstmt = conn.prepareStatement(query);
                        pstmt.setString(1, accName);
                        results = pstmt.executeQuery();
                            while(results.next()){
                                teacherId = results.getInt("Id");
                                PreparedStatement pstmt2 = conn.prepareStatement(query2);
                                pstmt2.setInt(1, teacherId);
                                results2 = pstmt2.executeQuery();
                                while(results2.next()){
                                    if(acc.equals(acc1)){
                                        System.out.println(results2.getInt("Id"));
                                        sub1 = results2.getInt("Id");
                                    }else if(acc.equals(acc2)){
                                        System.out.println(results2.getInt("Id"));
                                        sub2 = results2.getInt("Id");
                                    }else if(acc.equals(acc3)){
                                        System.out.println(results2.getInt("Id"));
                                        sub3 = results2.getInt("Id");
                                    }else if(acc.equals(acc4)){
                                        System.out.println(results2.getInt("Id"));
                                        sub4 = results2.getInt("Id");
                                    }else if(acc.equals(acc5)){
                                        System.out.println(results2.getInt("Id"));
                                        sub5 = results2.getInt("Id");
                                    }else{
                                        System.out.println(results2.getInt("Id"));
                                        sub6 = results2.getInt("Id");
                                    }  
                                }
                            }
                        }

                        
                        PreparedStatement pstmt3 = conn.prepareStatement(query3);
                        pstmt3.setString(1, studentName);
                        pstmt3.setInt(2, sub1);
                        pstmt3.setInt(3, sub2);
                        pstmt3.setInt(4, sub3);
                        pstmt3.setInt(5, sub4);
                        pstmt3.setInt(6, sub5);
                        pstmt3.setInt(7, sub6);

                        pstmt3.execute();


                        conn.commit();
                        System.out.println("Added");
                    }catch(SQLException e) {
                        System.out.println(e);
                        conn.rollback();
                    }
                    conn.close();
                
                
            }catch (ClassNotFoundException ex){
                    System.out.println(ex);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        
        
    }
    
    private void databaseConnection() {
            try {

                //Gets details from properties file
                input = new FileInputStream("config.properties");
                prop.load(input);
                dbusername = prop.getProperty("adminusername");
                encryptedData = prop.getProperty("adminpw");
                decryptedData = decrypt(encryptedData);

            } catch (FileNotFoundException ex) {
                //Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {

            }
    }
    
    private char[] decrypt(String encryptedData) {
        String schoolPostcode = "LdU6_UF}?Z3Pnwa3";
        schoolPostCodeGen(schoolPostcode);

        try {
            Cipher c = Cipher.getInstance("AES/ECB/PKCS5Padding");
            c.init(Cipher.DECRYPT_MODE, schoolNumber);
            c.doFinal(Base64.getDecoder().decode(encryptedData));
            byte[] convertedByte = c.doFinal(Base64.getDecoder().decode(encryptedData));
            convertedChar = new char[convertedByte.length];
            for (int i = 0; i < convertedByte.length; i++) {
                convertedChar[i] = (char) convertedByte[i];
            }
        } catch (NoSuchAlgorithmException ex) {

        } catch (NoSuchPaddingException ex) {

        } catch (InvalidKeyException ex) {

        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        return convertedChar;
    }
    
    private void schoolPostCodeGen(String postCode) {
        MessageDigest sha = null;
        try {
            key = postCode.getBytes("UTF-8");
            sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16);
            schoolNumber = new SecretKeySpec(key, "AES");
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }
}
