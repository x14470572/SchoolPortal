/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Base64;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;

public class CreateAccountScreen extends javax.swing.JFrame {
    private adminMainMenu adminMainMenu;
    private final String DB_URL = "jdbc:mysql://rds-mysql-tutorial.conn5z28bnte.eu-west-1.rds.amazonaws.com:3306/SchoolPortal";
    private Properties prop = new Properties();
    private InputStream input = null;
    private String encryptedData;
    private char[] decryptedData;
    private static SecretKeySpec schoolNumber;
    private static byte[] key;
    private char[] convertedChar;
    private String dbusername;
    private Connection conn = null;
    private Statement stmt = null;
    private ResultSet results;
    private String subjectName;
    private String childName;
    private int studentId;
    private int parentId;
    private int teacherId;
    private String firstLetter;
    private String pPass;
    private String tPass;
    private String userName;
    private String parentName;
    private String teacherName;
    private String foreName;
    private String surName;

    /**
     * Creates new form CreateAccountScreen
     */
    public CreateAccountScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        createStudentIcon = new javax.swing.JLabel();
        backBT = new javax.swing.JButton();
        forenameTxt1 = new javax.swing.JTextField();
        foreNameTF = new javax.swing.JTextField();
        sureNameTxt = new javax.swing.JTextField();
        surenameTF = new javax.swing.JTextField();
        enrolledTxt = new javax.swing.JTextField();
        enrolledTF = new javax.swing.JTextField();
        addParentBT = new javax.swing.JButton();
        line = new javax.swing.JTextField();
        createAccoutTxt = new javax.swing.JTextField();
        tforenameTxt = new javax.swing.JTextField();
        tforenmaeTF = new javax.swing.JTextField();
        tsurenameTxt = new javax.swing.JTextField();
        tsurenameTF = new javax.swing.JTextField();
        subjectTxt = new javax.swing.JTextField();
        addTeacherBT = new javax.swing.JButton();
        subjectCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 1000));

        backgroundPanel.setBackground(new java.awt.Color(250, 228, 188));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createStudentIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createStudentIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/createAccount.png"))); // NOI18N
        backgroundPanel.add(createStudentIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 200, 200));

        backBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/backBT.png"))); // NOI18N
        backBT.setBorder(null);
        backBT.setOpaque(false);
        backBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(backBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 50, 50));

        forenameTxt1.setEditable(false);
        forenameTxt1.setBackground(new java.awt.Color(250, 228, 188));
        forenameTxt1.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        forenameTxt1.setText("Parent Forename:");
        forenameTxt1.setBorder(null);
        backgroundPanel.add(forenameTxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        foreNameTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(foreNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 250, 50));

        sureNameTxt.setEditable(false);
        sureNameTxt.setBackground(new java.awt.Color(250, 228, 188));
        sureNameTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        sureNameTxt.setText("Parent Surname:");
        sureNameTxt.setBorder(null);
        backgroundPanel.add(sureNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, -1, -1));

        surenameTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(surenameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 570, 250, 50));

        enrolledTxt.setEditable(false);
        enrolledTxt.setBackground(new java.awt.Color(250, 228, 188));
        enrolledTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        enrolledTxt.setText("Enrolled Child:");
        enrolledTxt.setBorder(null);
        backgroundPanel.add(enrolledTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 670, -1, -1));

        enrolledTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        enrolledTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrolledTFActionPerformed(evt);
            }
        });
        backgroundPanel.add(enrolledTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 710, 250, 50));

        addParentBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        addParentBT.setText("Add Parent");
        addParentBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addParentBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(addParentBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 800, 160, 50));

        line.setEditable(false);
        line.setBackground(new java.awt.Color(65, 147, 211));
        line.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineActionPerformed(evt);
            }
        });
        backgroundPanel.add(line, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 390, 10, 490));

        createAccoutTxt.setEditable(false);
        createAccoutTxt.setBackground(new java.awt.Color(250, 228, 188));
        createAccoutTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        createAccoutTxt.setText("Create Account");
        createAccoutTxt.setBorder(null);
        createAccoutTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccoutTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(createAccoutTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 220, -1));

        tforenameTxt.setEditable(false);
        tforenameTxt.setBackground(new java.awt.Color(250, 228, 188));
        tforenameTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        tforenameTxt.setText("Teacher Forename:");
        tforenameTxt.setBorder(null);
        backgroundPanel.add(tforenameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, -1, -1));

        tforenmaeTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(tforenmaeTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 250, 50));

        tsurenameTxt.setEditable(false);
        tsurenameTxt.setBackground(new java.awt.Color(250, 228, 188));
        tsurenameTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        tsurenameTxt.setText("Teacher Surname:");
        tsurenameTxt.setBorder(null);
        tsurenameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tsurenameTxtActionPerformed(evt);
            }
        });
        backgroundPanel.add(tsurenameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, -1, -1));

        tsurenameTF.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        backgroundPanel.add(tsurenameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 570, 250, 50));

        subjectTxt.setEditable(false);
        subjectTxt.setBackground(new java.awt.Color(250, 228, 188));
        subjectTxt.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        subjectTxt.setText("Subject:");
        subjectTxt.setBorder(null);
        backgroundPanel.add(subjectTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 670, -1, -1));

        addTeacherBT.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        addTeacherBT.setText("Add Teacher");
        addTeacherBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeacherBTActionPerformed(evt);
            }
        });
        backgroundPanel.add(addTeacherBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 800, 160, 50));

        subjectCB.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        subjectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maths", "English", "Irish", "Chemistry", "Business", "French" }));
        backgroundPanel.add(subjectCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 710, 250, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
         adminMainMenu.setVisible(true);
    }//GEN-LAST:event_backBTActionPerformed

    private void enrolledTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrolledTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enrolledTFActionPerformed

    private void addParentBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addParentBTActionPerformed
        // TODO add your handling code here:
        AddParent();
        this.setVisible(false);
        adminMainMenu.setVisible(true);
    }//GEN-LAST:event_addParentBTActionPerformed

    private void lineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lineActionPerformed

    private void addTeacherBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeacherBTActionPerformed
        // TODO add your handling code here:
        AddTeacher();
        this.setVisible(false);
        adminMainMenu.setVisible(true);
    }//GEN-LAST:event_addTeacherBTActionPerformed

    private void tsurenameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tsurenameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tsurenameTxtActionPerformed

    private void createAccoutTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccoutTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createAccoutTxtActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addParentBT;
    private javax.swing.JButton addTeacherBT;
    private javax.swing.JButton backBT;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JTextField createAccoutTxt;
    private javax.swing.JLabel createStudentIcon;
    private javax.swing.JTextField enrolledTF;
    private javax.swing.JTextField enrolledTxt;
    private javax.swing.JTextField foreNameTF;
    private javax.swing.JTextField forenameTxt1;
    private javax.swing.JTextField line;
    private javax.swing.JComboBox<String> subjectCB;
    private javax.swing.JTextField subjectTxt;
    private javax.swing.JTextField sureNameTxt;
    private javax.swing.JTextField surenameTF;
    private javax.swing.JTextField tforenameTxt;
    private javax.swing.JTextField tforenmaeTF;
    private javax.swing.JTextField tsurenameTF;
    private javax.swing.JTextField tsurenameTxt;
    // End of variables declaration//GEN-END:variables

    void account(Object account) {

        adminMainMenu = (schoolproject.adminMainMenu) account;
    }
    
    void AddParent() {
        databaseConnection();
        
        surName = surenameTF.getText();
        foreName = foreNameTF.getText();
        parentName = foreName + " " + surName;
        childName = enrolledTF.getText();
        firstLetter = foreName.substring(0,1);
        userName = firstLetter + surName + "123";
        pPass = "HLQZBQCMA/e7E+EA4FClRpwp8m60NfSeXTvEZzLY9ME=";
        

        try{
           Class.forName("com.mysql.jdbc.Driver");
           conn = DriverManager.getConnection(DB_URL, dbusername, new String(decryptedData)); 
           
           String query = "INSERT INTO Accounts(Type, Username, Password, AccName, FirstLogin) VALUES (?,?,?,?,?)";
           String query2 = "SELECT Id FROM Students WHERE StudName = ?";
           String query3 = "SELECT Id FROM Accounts WHERE Username = ?";
           String query4 = "UPDATE Students SET ParentId = ? WHERE Id = ?";
           
            try{
                conn.setAutoCommit(false);
                
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setInt(1, 3);
                pstmt.setString(2, userName);
                pstmt.setString(3, pPass);
                pstmt.setString(4, parentName);
                pstmt.setInt(5, 1);
                pstmt.execute();
                
                conn.commit();
            }catch(SQLException e) {
                System.out.println(e);
                conn.rollback();
            }
                
            try{    
                PreparedStatement pstmt2 = conn.prepareStatement(query2);
                pstmt2.setString(1, childName);
                results = pstmt2.executeQuery();
                while(results.next()){
                    studentId = results.getInt("Id");
                }
                
                PreparedStatement pstmt3 = conn.prepareStatement(query3);
                pstmt3.setString(1, userName);
                results = pstmt3.executeQuery();
                while(results.next()){
                    parentId = results.getInt("Id");
                }
                
                PreparedStatement pstmt4 = conn.prepareStatement(query4);
                pstmt4.setInt(1, parentId);
                pstmt4.setInt(2, studentId);
                pstmt4.executeUpdate();
                

                conn.commit();
            }catch(SQLException e) {
                System.out.println(e);
                conn.rollback();
            }
            conn.close();
        }catch(ClassNotFoundException ex) {
            System.out.println(ex);
        }catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    
    void AddTeacher() {
        databaseConnection();
        
        surName = tsurenameTF.getText();
        foreName = tforenmaeTF.getText();
        teacherName = foreName + " " + surName;
        subjectName = (String) subjectCB.getSelectedItem();
        firstLetter = foreName.substring(0,1);
        userName = firstLetter + surName + "987";
        tPass = "PnmcMbY2JiuUOLZCxPnSlE61+Kkmk1dKfu4EgDjF+rQ=";
        

        try{
           Class.forName("com.mysql.jdbc.Driver");
           conn = DriverManager.getConnection(DB_URL, dbusername, new String(decryptedData)); 
           
           String query = "INSERT INTO Accounts(Type, Username, Password, AccName, FirstLogin) VALUES (?,?,?,?,?)";
           String query2 = "SELECT Id FROM Accounts WHERE Username = ?";
           String query3 = "INSERT INTO Subjects(SubName, TeacherId) VALUES(?,?)";
           
            try{
                conn.setAutoCommit(false);
                
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setInt(1, 2);
                pstmt.setString(2, userName);
                pstmt.setString(3, tPass);
                pstmt.setString(4, teacherName);
                pstmt.setInt(5, 1);
                pstmt.execute();
                
                conn.commit();
            }catch(SQLException e) {
                System.out.println(e);
                conn.rollback();
            }
                
            try{
                PreparedStatement pstmt2 = conn.prepareStatement(query2);
                pstmt2.setString(1, userName);
                results = pstmt2.executeQuery();
                while(results.next()){
                    teacherId = results.getInt("Id");
                }
                
                PreparedStatement pstmt3 = conn.prepareStatement(query3);
                pstmt3.setString(1, subjectName);
                pstmt3.setInt(2, teacherId);
                pstmt3.executeUpdate();
                

                conn.commit();
            }catch(SQLException e) {
                System.out.println(e);
                conn.rollback();
            }
            conn.close();
        }catch(ClassNotFoundException ex) {
            System.out.println(ex);
        }catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    
    
    
    private void databaseConnection() {
            try {

                //Gets details from properties file
                input = new FileInputStream("config.properties");
                prop.load(input);
                dbusername = prop.getProperty("adminusername");
                encryptedData = prop.getProperty("adminpw");
                decryptedData = decrypt(encryptedData);

            } catch (FileNotFoundException ex) {
                //Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {

            }
    }
    
    private char[] decrypt(String encryptedData) {
        String schoolPostcode = "LdU6_UF}?Z3Pnwa3";
        schoolPostCodeGen(schoolPostcode);

        try {
            Cipher c = Cipher.getInstance("AES/ECB/PKCS5Padding");
            c.init(Cipher.DECRYPT_MODE, schoolNumber);
            c.doFinal(Base64.getDecoder().decode(encryptedData));
            byte[] convertedByte = c.doFinal(Base64.getDecoder().decode(encryptedData));
            convertedChar = new char[convertedByte.length];
            for (int i = 0; i < convertedByte.length; i++) {
                convertedChar[i] = (char) convertedByte[i];
            }
        } catch (NoSuchAlgorithmException ex) {

        } catch (NoSuchPaddingException ex) {

        } catch (InvalidKeyException ex) {

        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(SignInScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        return convertedChar;
    }
    
    private void schoolPostCodeGen(String postCode) {
        MessageDigest sha = null;
        try {
            key = postCode.getBytes("UTF-8");
            sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16);
            schoolNumber = new SecretKeySpec(key, "AES");
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }
}
